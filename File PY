import time
import requests
import Adafruit_DHT
import RPi.GPIO as GPIO

# WiFi and server configuration
ssid = "KONSELING 2"
password = ""
server_name = "http://192.168.80.101:5000"

# Sensor configuration
DHT_SENSOR = Adafruit_DHT.DHT22
DHT_PIN = 4

# Initialize GPIO for MQ135 sensor
MQ135_PIN = 17
GPIO.setmode(GPIO.BCM)
GPIO.setup(MQ135_PIN, GPIO.IN)

def read_mq135():
    # Dummy function to simulate reading from MQ135 sensor
    # Replace this with actual code to read from the MQ135 sensor
    resistance = GPIO.input(MQ135_PIN)  # This should be replaced with actual analog read
    ppm = resistance * 0.1  # Replace this with actual conversion to ppm
    return resistance, ppm

def read_dht22():
    humidity, temperature = Adafruit_DHT.read(DHT_SENSOR, DHT_PIN)
    return temperature, humidity

def send_data(temperature, ppm):
    url = f"{server_name}/submit?temp={temperature}&ppm={ppm}"
    response = requests.get(url)
    if response.status_code == 200:
        print("Data sent successfully")
        print("Response:", response.text)
    else:
        print("Failed to send data")
        print("Error code:", response.status_code)

def main():
    while True:
        temperature, humidity = read_dht22()
        resistance, ppm = read_mq135()
        
        if temperature is not None and humidity is not None:
            print(f"Temperature: {temperature}C, Humidity: {humidity}%")
        else:
            print("Failed to retrieve data from humidity sensor")

        print(f"Resistance: {resistance} Ohms, PPM: {ppm}")

        if temperature is not None:
            send_data(temperature, ppm)
        
        time.sleep(2)

if __name__ == "__main__":
    main()
